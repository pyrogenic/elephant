import { action, autorun, observable } from "mobx";
import React from "react";
import { arraySetToggle } from "@pyrogenic/asset/lib";

/**
 * @param getItems function that returns a list of items. This should be something mobx will track like accessing a computed value. 
 * @param includeItem the filter to apply, which should filter based on observable properties of the items.
 * @returns a memoized observable list of items that will update automatically as the set of items generated by getItems, and wether each matches filter, changes over time.
 */
export default function useObservableFilter<T>(getItems: () => T[], includeItem: (item: T) => boolean) {
    const itemSubset = React.useMemo(() => observable<T>([]), []);
    React.useMemo(() => autorun(() => {
        getItems().forEach(action((item) => {
            const shouldInclude = !!includeItem(item);
            const doesInclude = !!itemSubset.includes(item);
            if (doesInclude !== shouldInclude) {
                arraySetToggle(itemSubset, item);
            }
        }));
    }), [getItems, includeItem, itemSubset]);
    return itemSubset;
}
